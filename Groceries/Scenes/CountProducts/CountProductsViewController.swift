//
//  CountProductsViewController.swift
//  Groceries
//
//  Created by Juan Giannuzzo on 2/15/17.
//  Copyright (c) 2017 me. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CountProductsViewControllerInput
{
  func displayFetchedGroceryItems(viewModel: CountProducts.Something.ViewModel)
}

protocol CountProductsViewControllerOutput
{
  func fetchGroceries(request: CountProducts.Something.Request)
}

class CountProductsViewController: UIViewController, CountProductsViewControllerInput
{
  var output: CountProductsViewControllerOutput!
  var router: CountProductsRouter!
  var displayedGroceries:[String]  = []
  
  @IBOutlet weak var tableView: UITableView!
  
  // MARK: - Object lifecycle
  
  override func awakeFromNib()
  {
    super.awakeFromNib()
    CountProductsConfigurator.sharedInstance.configure(viewController: self)
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomethingOnLoad()
  }
  
  // MARK: - Event handling
  
  func doSomethingOnLoad()
  {
    // NOTE: Ask the Interactor to do some work
    
    let request = CountProducts.Something.Request()
    output.fetchGroceries(request: request)
  }
  
  // MARK: - Display logic
  
  func displayFetchedGroceryItems(viewModel: CountProducts.Something.ViewModel)
  {
    displayedGroceries = viewModel.displayedGroceries
    self.tableView.reloadData()
    for str in viewModel.displayedGroceries {
      print(str)
    }
  }
}

extension CountProductsViewController: UITableViewDataSource {
  
  // MARK: Table view data source
  
  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
  {
    return displayedGroceries.count
  }
  
  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
  {
    let displayedGrocery = displayedGroceries[indexPath.row]
    var cell = tableView.dequeueReusableCell(withIdentifier: "GroceriesTableViewCell")
    if cell == nil {
      cell = UITableViewCell(style: .value1, reuseIdentifier: "GroceriesTableViewCell")
    }
    cell?.textLabel?.text = displayedGrocery
    
    return cell!
  }
}
